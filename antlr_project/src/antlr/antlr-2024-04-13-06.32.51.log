2024-04-13 06:32:51:344 grammar LogManager.java:25 before: (COMBINED_GRAMMAR Expr (@ header {
	package antlr;
}) (RULES (RULE prog (BLOCK (ALT (+ (BLOCK (ALT decl) (ALT expr))) EOF))) (RULE decl (BLOCK (ALT ID ':' INT_TYPE '=' NUM))) (RULE expr (BLOCK (ALT expr '*' expr) (ALT expr '+' expr) (ALT ID) (ALT NUM))) (RULE ID (BLOCK (ALT [a-z] (* (BLOCK (ALT [a-zA-Z0-9_])))))) (RULE NUM (BLOCK (ALT '0') (ALT (? (BLOCK (ALT '-'))) [1-9] (* (BLOCK (ALT [0-9])))))) (RULE INT_TYPE (BLOCK (ALT 'INT'))) (RULE COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '--' (* (BLOCK (ALT (~ (SET [\r\n])))))) skip))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\n])))) skip)))))
2024-04-13 06:32:51:353 grammar LogManager.java:25 after: (COMBINED_GRAMMAR Expr (@ header {
	package antlr;
}) (RULES (RULE prog (BLOCK (ALT (+ (BLOCK (ALT decl) (ALT expr))) EOF))) (RULE decl (BLOCK (ALT ID ':' INT_TYPE '=' NUM))) (RULE expr (BLOCK (ALT expr '*' expr) (ALT expr '+' expr) (ALT ID) (ALT NUM))) (RULE ID (BLOCK (ALT [a-z] (* (BLOCK (ALT [a-zA-Z0-9_])))))) (RULE NUM (BLOCK (ALT '0') (ALT (? (BLOCK (ALT '-'))) [1-9] (* (BLOCK (ALT [0-9])))))) (RULE INT_TYPE (BLOCK (ALT 'INT'))) (RULE COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '--' (* (BLOCK (ALT (~ (SET [\r\n])))))) skip))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\n])))) skip)))))
2024-04-13 06:32:51:368 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR Expr (@ header {
	package antlr;
}) (RULES (RULE prog (BLOCK (ALT (+ (BLOCK (ALT decl) (ALT expr))) EOF))) (RULE decl (BLOCK (ALT ID ':' INT_TYPE '=' NUM))) (RULE expr (BLOCK (ALT expr '*' expr) (ALT expr '+' expr) (ALT ID) (ALT NUM)))))
2024-04-13 06:32:51:368 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR ExprLexer (@ header {
	package antlr;
}) (RULES (RULE T__0 (BLOCK (ALT ':'))) (RULE T__1 (BLOCK (ALT '='))) (RULE T__2 (BLOCK (ALT '*'))) (RULE T__3 (BLOCK (ALT '+'))) (RULE ID (BLOCK (ALT [a-z] (* (BLOCK (ALT [a-zA-Z0-9_])))))) (RULE NUM (BLOCK (ALT '0') (ALT (? (BLOCK (ALT '-'))) [1-9] (* (BLOCK (ALT [0-9])))))) (RULE INT_TYPE (BLOCK (ALT 'INT'))) (RULE COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '--' (* (BLOCK (ALT (~ (SET [\r\n])))))) skip))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\n])))) skip)))))
2024-04-13 06:32:51:500 action-translator LogManager.java:25 translate 
	package antlr;

2024-04-13 06:32:51:562 left-recursion LogManager.java:25 expr
    :   ( {} ID<tokenIndex=60> 
        | NUM<tokenIndex=64> 
        )
        (
          {precpred(_ctx, 4)}?<p=4> '*'<tokenIndex=46> expr<tokenIndex=48,p=5>
                  | {precpred(_ctx, 3)}?<p=3> '+'<tokenIndex=54> expr<tokenIndex=56,p=4>
        )*
    ;
2024-04-13 06:32:51:567 grammar LogManager.java:25 added: (RULE expr (BLOCK (ALT (BLOCK (ALT {} (ID (ELEMENT_OPTIONS (= tokenIndex 60)))) (ALT (NUM (ELEMENT_OPTIONS (= tokenIndex 64))))) (* (BLOCK (ALT ({precpred(_ctx, 4)}? (ELEMENT_OPTIONS (= p 4))) ('*' (ELEMENT_OPTIONS (= tokenIndex 46))) (expr (ELEMENT_OPTIONS (= tokenIndex 48) (= p 5)))) (ALT ({precpred(_ctx, 3)}? (ELEMENT_OPTIONS (= p 3))) ('+' (ELEMENT_OPTIONS (= tokenIndex 54))) (expr (ELEMENT_OPTIONS (= tokenIndex 56) (= p 4)))))))))
2024-04-13 06:32:51:568 semantics LogManager.java:25 tokens={EOF=-1, T__0=1, T__1=2, T__2=3, T__3=4, ID=5, NUM=6, INT_TYPE=7, COMMENT=8, WS=9}
2024-04-13 06:32:51:568 semantics LogManager.java:25 strings={':'=1, '='=2, '*'=3, '+'=4, 'INT'=7}
2024-04-13 06:32:51:577 LL1 LogManager.java:25 
DECISION 0 in rule prog
2024-04-13 06:32:51:578 LL1 LogManager.java:25 look=[5, {5..6}]
2024-04-13 06:32:51:578 LL1 LogManager.java:25 LL(1)? false
2024-04-13 06:32:51:578 LL1 LogManager.java:25 
DECISION 1 in rule prog
2024-04-13 06:32:51:578 LL1 LogManager.java:25 look=[{5..6}, <EOF>]
2024-04-13 06:32:51:578 LL1 LogManager.java:25 LL(1)? true
2024-04-13 06:32:51:578 LL1 LogManager.java:25 
DECISION 2 in rule expr
2024-04-13 06:32:51:578 LL1 LogManager.java:25 look=[5, 6]
2024-04-13 06:32:51:578 LL1 LogManager.java:25 LL(1)? true
2024-04-13 06:32:51:578 LL1 LogManager.java:25 
DECISION 3 in rule expr
2024-04-13 06:32:51:578 LL1 LogManager.java:25 look=[null, null]
2024-04-13 06:32:51:578 LL1 LogManager.java:25 LL(1)? false
2024-04-13 06:32:51:578 LL1 LogManager.java:25 
DECISION 4 in rule expr
2024-04-13 06:32:51:578 LL1 LogManager.java:25 look=[null, null]
2024-04-13 06:32:51:578 LL1 LogManager.java:25 LL(1)? false
2024-04-13 06:32:51:578 action-translator LogManager.java:25 translate 
	package antlr;

2024-04-13 06:32:51:592 action-translator LogManager.java:25 translate 
2024-04-13 06:32:51:593 action-translator LogManager.java:25 translate precpred(_ctx, 4)
2024-04-13 06:32:51:593 action-translator LogManager.java:25 translate precpred(_ctx, 3)
2024-04-13 06:32:51:594 action-translator LogManager.java:25 translate precpred(_ctx, 4)
2024-04-13 06:32:51:594 action-translator LogManager.java:25 translate precpred(_ctx, 3)
